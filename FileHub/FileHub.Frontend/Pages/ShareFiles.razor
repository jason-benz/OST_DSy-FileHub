@page "/shareFiles"

@inject IConfiguration _configuration;

@using FileHub.Frontend.Datahandling
@using FileHub.Service.Datahandling
@using FileHub.Frontend.Network
@using System.Net.WebSockets

<h3>Share Files</h3>
<b>Your share code: @_groupId</b>
<p>You can upload up to @MaxAllowedFiles files with a size up to 500MB per file and share them with your friends</p>
<InputFile OnChange="@LoadFiles" multiple />

@if (_isLoading)
{
    <p>Loading files...</p>
}
else
{
    <br /><br />

    @foreach (var file in _loadedFiles)
    {
        <b>@file.Name</b>
        <p>
            Size (bytes): @file.Size
            <br />
            Content type: @file.ContentType
        </p>
    }

    @if (_loadedFiles.Any())
    {
        <button class="btn btn-primary" @onclick="UploadFiles">Start file upload</button>
        <br />
    }
}

@code {
    private readonly List<IBrowserFile> _loadedFiles = new();
    private const int MaxAllowedFiles = 5;
    private bool _isLoading;
    private string _groupId;
    
    public ShareFiles()
    {
        int randomNumber = new Random().Next(10,99);
        _groupId = randomNumber + DateTime.Now.ToString("ssyyddmmhhMM"); 
    }
    
    private void LoadFiles(InputFileChangeEventArgs e)
    {
        _isLoading = true;
        _loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(MaxAllowedFiles))
        {
            try
            {
                _loadedFiles.Add(file);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"File: {file.Name} Error: {ex.Message}");
            }
        }

        _isLoading = false;
    }

    private async Task UploadFiles()
    {
        foreach (var file in _loadedFiles)
        {
            IBinaryDataHandler data = new BinaryDataHandler(file);
            WebsocketClient client;
            bool success;
            
            do
            {
                client = new(new ClientWebSocket());
                success = await client.Connect($"ws://localhost:7070/dataservice/send/{_groupId}/{file.Name}") && await client.SendAsync(data);
            } while (!success);

            client.Close();
        }
    }
}